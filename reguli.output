Grammar

    0 $accept: E $end

    1 E: E '+' T
    2  | T

    3 T: T '*' F
    4  | F

    5 F: '(' E ')'
    6  | 'a'
    7  | '-' '(' E ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 7
')' (41) 5 7
'*' (42) 3
'+' (43) 1
'-' (45) 7
'a' (97) 6
error (256)


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
E (10)
    on left: 1 2, on right: 0 1 5 7
T (11)
    on left: 3 4, on right: 1 2 3
F (12)
    on left: 5 6 7, on right: 3 4


state 0

    0 $accept: . E $end

    '('  shift, and go to state 1
    'a'  shift, and go to state 2
    '-'  shift, and go to state 3

    E  go to state 4
    T  go to state 5
    F  go to state 6


state 1

    5 F: '(' . E ')'

    '('  shift, and go to state 1
    'a'  shift, and go to state 2
    '-'  shift, and go to state 3

    E  go to state 7
    T  go to state 5
    F  go to state 6


state 2

    6 F: 'a' .

    $default  reduce using rule 6 (F)


state 3

    7 F: '-' . '(' E ')'

    '('  shift, and go to state 8


state 4

    0 $accept: E . $end
    1 E: E . '+' T

    $end  shift, and go to state 9
    '+'   shift, and go to state 10


state 5

    2 E: T .
    3 T: T . '*' F

    '*'  shift, and go to state 11

    $default  reduce using rule 2 (E)


state 6

    4 T: F .

    $default  reduce using rule 4 (T)


state 7

    1 E: E . '+' T
    5 F: '(' E . ')'

    '+'  shift, and go to state 10
    ')'  shift, and go to state 12


state 8

    7 F: '-' '(' . E ')'

    '('  shift, and go to state 1
    'a'  shift, and go to state 2
    '-'  shift, and go to state 3

    E  go to state 13
    T  go to state 5
    F  go to state 6


state 9

    0 $accept: E $end .

    $default  accept


state 10

    1 E: E '+' . T

    '('  shift, and go to state 1
    'a'  shift, and go to state 2
    '-'  shift, and go to state 3

    T  go to state 14
    F  go to state 6


state 11

    3 T: T '*' . F

    '('  shift, and go to state 1
    'a'  shift, and go to state 2
    '-'  shift, and go to state 3

    F  go to state 15


state 12

    5 F: '(' E ')' .

    $default  reduce using rule 5 (F)


state 13

    1 E: E . '+' T
    7 F: '-' '(' E . ')'

    '+'  shift, and go to state 10
    ')'  shift, and go to state 16


state 14

    1 E: E '+' T .
    3 T: T . '*' F

    '*'  shift, and go to state 11

    $default  reduce using rule 1 (E)


state 15

    3 T: T '*' F .

    $default  reduce using rule 3 (T)


state 16

    7 F: '-' '(' E ')' .

    $default  reduce using rule 7 (F)
