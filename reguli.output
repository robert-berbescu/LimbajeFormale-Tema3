Grammar

    0 $accept: E $end

    1 E: E '+' T
    2  | T
    3  | E '-' T

    4 T: T '*' F
    5  | F

    6 F: '(' E ')'
    7  | 'a'
    8  | '-' '(' E ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 8
')' (41) 6 8
'*' (42) 4
'+' (43) 1
'-' (45) 3 8
'a' (97) 7
error (256)


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
E (10)
    on left: 1 2 3, on right: 0 1 3 6 8
T (11)
    on left: 4 5, on right: 1 2 3 4
F (12)
    on left: 6 7 8, on right: 4 5


state 0

    0 $accept: . E $end

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    E  go to state 4
    T  go to state 5
    F  go to state 6


state 1

    8 F: '-' . '(' E ')'

    '('  shift, and go to state 7


state 2

    6 F: '(' . E ')'

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    E  go to state 8
    T  go to state 5
    F  go to state 6


state 3

    7 F: 'a' .

    $default  reduce using rule 7 (F)


state 4

    0 $accept: E . $end
    1 E: E . '+' T
    3  | E . '-' T

    $end  shift, and go to state 9
    '+'   shift, and go to state 10
    '-'   shift, and go to state 11


state 5

    2 E: T .
    4 T: T . '*' F

    '*'  shift, and go to state 12

    $default  reduce using rule 2 (E)


state 6

    5 T: F .

    $default  reduce using rule 5 (T)


state 7

    8 F: '-' '(' . E ')'

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    E  go to state 13
    T  go to state 5
    F  go to state 6


state 8

    1 E: E . '+' T
    3  | E . '-' T
    6 F: '(' E . ')'

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ')'  shift, and go to state 14


state 9

    0 $accept: E $end .

    $default  accept


state 10

    1 E: E '+' . T

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    T  go to state 15
    F  go to state 6


state 11

    3 E: E '-' . T

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    T  go to state 16
    F  go to state 6


state 12

    4 T: T '*' . F

    '-'  shift, and go to state 1
    '('  shift, and go to state 2
    'a'  shift, and go to state 3

    F  go to state 17


state 13

    1 E: E . '+' T
    3  | E . '-' T
    8 F: '-' '(' E . ')'

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ')'  shift, and go to state 18


state 14

    6 F: '(' E ')' .

    $default  reduce using rule 6 (F)


state 15

    1 E: E '+' T .
    4 T: T . '*' F

    '*'  shift, and go to state 12

    $default  reduce using rule 1 (E)


state 16

    3 E: E '-' T .
    4 T: T . '*' F

    '*'  shift, and go to state 12

    $default  reduce using rule 3 (E)


state 17

    4 T: T '*' F .

    $default  reduce using rule 4 (T)


state 18

    8 F: '-' '(' E ')' .

    $default  reduce using rule 8 (F)
